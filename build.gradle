plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'org.ajoberstar.grgit' version '4.1.0'
	id 'maven-publish'
}

version = "${project.mod_version}${getVersionMetadata()}"
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	// maven { url "https://maven.shedaniel.me/" }
	// maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	// modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	// Individual Fabric APIs with JIJ
	// modImplementation(include(fabricApi.module("fabric-api-base", project.fabric_version)))

	// Frequently used dependencies
	// modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	// modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
}

base {
	archivesName = "${project.archives_base_name}-mc${project.minecraft_version}"
}

processResources {
	inputs.property "version", version

	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}


tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
	it.options.encoding("UTF-8")
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

def getVersionMetadata() {
	def release = System.getenv("BUILD_RELEASE") == "true"
	def build_ci_branch = System.getenv("CI_COMMIT_BRANCH")

	if (release) {
		return ""
	}

	if (grgit != null && grgit.status().clean) {
		// 8 chars long to match GitLab's commit IDs
		def id = grgit.head().id[[0..7]]
		def branch = grgit.branch.current().name

		if (branch == "main" || build_ci_branch == "main") {
			return "+" + id
		}

		return "+" + branch + "." + id
	}

	return "+SNAPSHOT"
}
